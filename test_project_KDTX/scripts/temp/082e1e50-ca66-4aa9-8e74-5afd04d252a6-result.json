{"name": "test_login_failure[test_data3]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 200 == 500\n +  where 200 = <Response [200]>.status_code", "trace": "self = <test_project_KDTX.scripts.test_login.Test_Login object at 0x1053a4890>\ntest_data = {'code': '2', 'message': '错误', 'msg': '用户名或密码错误', 'password': '123456', ...}\n\n    @pytest.mark.parametrize(\"test_data\", get_test_data())\n    def test_login_failure(self, test_data): #test_data读取后是字典形式\n        verify_uuid = self.login_api.get_verify_code().json().get(\"uuid\")\n        #uuid也可以通过类属性输入\n        login_data = {\"username\": test_data.get(\"username\"),\n                      \"password\": test_data.get(\"password\"),\n                      \"code\": test_data.get(\"code\"),\n                      \"uuid\": verify_uuid}\n        results = self.login_api.login(login_data)\n        Test_Login.token = results.json().get(\"token\")\n        print(\"\\ntoken is:\", Test_Login.token)\n>       assert results.status_code == 500\nE       assert 200 == 500\nE        +  where 200 = <Response [200]>.status_code\n\ntest_login.py:31: AssertionError"}, "parameters": [{"name": "test_data", "value": "{'username': 'admin', 'password': '123456', 'code': '2', 'message': '错误', 'msg': '用户名或密码错误'}"}], "start": 1717508418546, "stop": 1717508419017, "uuid": "8bc2e172-f9c9-44f0-ae69-069e7fdbba5d", "historyId": "5ca840b6ee0ef1e78068caf970b2d7e4", "testCaseId": "ceb91945d85c022458d588e486ea53ac", "fullName": "scripts.test_login.Test_Login#test_login_failure", "labels": [{"name": "parentSuite", "value": "scripts"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "Test_Login"}, {"name": "host", "value": "Henrys-MacBook-Air.local"}, {"name": "thread", "value": "29451-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scripts.test_login"}]}